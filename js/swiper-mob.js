// –≠—Ç–æ—Ç –∫–æ–¥ –±—É–¥–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª–µ–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö —Å–≤–∞–π–ø–µ—Ä–æ–≤

function initCustomSwiper(swiperElement) {
  const wrapper = swiperElement.querySelector(".swiper-wrapper");
  const slides = swiperElement.querySelectorAll(".swiper-slide");

  if (!wrapper || slides.length === 0) return;

  let currentIndex = 0;
  let startX = 0;
  let currentX = 0;
  let isDragging = false;
  let wrapperWidth = wrapper.offsetWidth;
  let slideWidth =
    slides[0].offsetWidth +
    (slides[1]
      ? slides[1].offsetLeft - slides[0].offsetWidth - slides[0].offsetLeft
      : 0);

  // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–ª–∞–π–¥–µ—Ä–∞
  function updateSlide() {
    wrapperWidth = wrapper.offsetWidth;
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –≤–ª–µ–≤–æ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—Ç—å –ø—É—Å—Ç—É—é –æ–±–ª–∞—Å—Ç—å
    const maxScroll = wrapper.scrollWidth - wrapperWidth;

    let newTransformValue = -currentIndex * slideWidth;

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª, —á—Ç–æ–±—ã –Ω–µ —É—Ö–æ–¥–∏—Ç—å –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
    if (newTransformValue < -maxScroll) {
      newTransformValue = -maxScroll;
      currentIndex = Math.floor(maxScroll / slideWidth);
    }
    if (newTransformValue > 0) {
      newTransformValue = 0;
      currentIndex = 0;
    }

    wrapper.style.transform = `translateX(${newTransformValue}px)`;
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥
  function nextSlide() {
    if (currentIndex < slides.length - 1) {
      currentIndex++;
      updateSlide();
    }
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥
  function prevSlide() {
    if (currentIndex > 0) {
      currentIndex--;
      updateSlide();
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã –¥–ª—è touch –∏ mouse)
  function handleStart(x) {
    startX = x;
    isDragging = true;
    wrapper.style.cursor = "grabbing";
  }

  function handleMove(x) {
    if (!isDragging) return;
    currentX = x;
    const deltaX = currentX - startX;
    const currentTransform = -currentIndex * slideWidth;
    const newTransformValue = currentTransform + deltaX;

    // üí° –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
    const maxScroll = wrapper.scrollWidth - wrapperWidth;

    // –ï—Å–ª–∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ—Ç—è–Ω—É—Ç—å –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ –≤–ø—Ä–∞–≤–æ
    if (currentIndex === 0 && deltaX > 0) {
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ, –¥–µ–ª–∞—è –µ–≥–æ –±–æ–ª–µ–µ "–≤—è–∑–∫–∏–º"
      const resistance = 3;
      wrapper.style.transform = `translateX(${deltaX / resistance}px)`;
      // –ï—Å–ª–∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ—Ç—è–Ω—É—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥ –≤–ª–µ–≤–æ
    } else if (
      wrapper.scrollWidth > wrapperWidth &&
      currentIndex === slides.length - 1 &&
      deltaX < 0
    ) {
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —Å "–≤—è–∑–∫–∏–º" —ç—Ñ—Ñ–µ–∫—Ç–æ–º
      const resistance = 3;
      const lastSlideTransform = -maxScroll;
      wrapper.style.transform = `translateX(${
        lastSlideTransform + deltaX / resistance
      }px)`;
      // –û–±—ã—á–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞
    } else {
      wrapper.style.transform = `translateX(${newTransformValue}px)`;
    }
  }

  function handleEnd() {
    if (!isDragging) return;
    const deltaX = currentX - startX;

    if (deltaX < -50) {
      nextSlide();
    } else if (deltaX > 50) {
      prevSlide();
    } else {
      updateSlide();
    }

    isDragging = false;
    wrapper.style.cursor = "grab";
  }

  // Touch Events
  wrapper.addEventListener("touchstart", (e) =>
    handleStart(e.touches[0].clientX)
  );
  wrapper.addEventListener("touchmove", (e) =>
    handleMove(e.touches[0].clientX)
  );
  wrapper.addEventListener("touchend", handleEnd);

  // Mouse Events
  wrapper.addEventListener("mousedown", (e) => handleStart(e.clientX));
  wrapper.addEventListener("mousemove", (e) => handleMove(e.clientX));
  wrapper.addEventListener("mouseup", handleEnd);
  wrapper.addEventListener("mouseleave", () => {
    if (isDragging) {
      handleEnd();
    }
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  updateSlide();
  wrapper.style.cursor = "grab";
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–∞–π–ø–µ—Ä–∞ –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–ª–∞—Å—Å–æ–º ".swiper"
function setupAllSwipers() {
  const swiperElements = document.querySelectorAll(".swiper");
  swiperElements.forEach((el) => initCustomSwiper(el));
}

// –í—ã–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", setupAllSwipers);

// –û–±–Ω–æ–≤–ª—è–µ–º —Å–ª–∞–π–¥–µ—Ä –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener("resize", () => {
  const swiperElements = document.querySelectorAll(".swiper");
  swiperElements.forEach((el) => {
    const wrapper = el.querySelector(".swiper-wrapper");
    if (wrapper) {
      wrapper.style.transform = "";
      initCustomSwiper(el);
    }
  });
});
